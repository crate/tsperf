apiVersion: batch/v1
kind: Job
metadata:
  labels:
    k8s-app: datagenerator
    app.kubernetes.io/name: {{ kubernetes.name }}
  name: dg-{{ ID_START }}
  namespace: "{{ kubernetes.namespace }}"
spec:
  backoffLimit: 0
  template:
    metadata:
      annotations:
        prometheus.io/port: "8000"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
      labels:
        k8s-app: datagenerator
        app.kubernetes.io/name: {{ kubernetes.name }}
    spec:
      imagePullSecrets:
        - name: image-pull-cr8
      containers:
        - name: datagenerator
          image: registry.cr8.net/data-generator:{{ version }}
          ports:
            - containerPort: 8000
              protocol: TCP
          resources:
            requests:
              cpu: "500m"
              memory: "8196Mi"
            limits:
              cpu: "4000m"
              memory: "8196Mi"
          volumeMounts:
            - name: datamodel
              mountPath: "/grafana_demo_model.json"
              subPath: grafana_demo_model.json
          env:
            - name: ID_START
              value: "{{ ID_START }}"
            - name: ID_END
              value: "{{ ID_END }}"
            - name: HOST
              value: {{ db.crateuri }}
            - name: INGEST_MODE
              value: "0"
            - name: INGEST_SIZE
              value: "241920"
            - name: MODEL_PATH
              value: "/grafana_demo_model.json"
            - name: INGEST_DELTA
              value: "5"
            - name: TABLE_NAME
              value: "doc.grafana_demo_values"
            - name: SHARDS
              value: "4"
            - name: USERNAME
              valueFrom:
                secretKeyRef:
                  name: datagenerator
                  key: crate_user
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: datagenerator
                  key: crate_password
      restartPolicy: Never
      volumes:
        - name: datamodel
          configMap:
            name: datamodel
