---
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    k8s-app: datagenerator
    app.kubernetes.io/name: "{{ kubernetes.name }}"
  name: "datamodel"
  namespace: "{{ kubernetes.namespace }}"
data:
  grafana_demo_model.json: |
    {
        "grafana_demo_values": {
            "tags": {
                "factory": 2,
                "machine": 10,
                "sensor": "id"
            },
            "metrics": {
                "temperature": {
                    "key": {
                        "value": "temperature"
                    },
                    "type": {
                        "value": "FLOAT"
                    },
                    "min": {
                        "value": 50
                    },
                    "max": {
                        "value": 200
                    },
                    "mean": {
                        "value": 125
                    },
                    "stdev": {
                        "value": 5
                    },
                    "variance": {
                        "value": 0.5
                    },
                    "error_rate": {
                        "value": 0.00001
                    },
                    "error_length": {
                        "value": 2.07
                    }
                },
                "fluid_level": {
                    "key": {
                        "value": "fluid_level"
                    },
                    "type": {
                        "value": "FLOAT"
                    },
                    "min": {
                        "value": 85
                    },
                    "max": {
                        "value": 100
                    },
                    "mean": {
                        "value": 92
                    },
                    "stdev": {
                        "value": 1
                    },
                    "variance": {
                        "value": 0.01
                    },
                    "error_rate": {
                        "value": 0.0001
                    },
                    "error_length": {
                        "value": 2.07
                    }
                },
                "humidity": {
                    "key": {
                        "value": "humidity"
                    },
                    "type": {
                        "value": "FLOAT"
                    },
                    "min": {
                        "value": 30
                    },
                    "max": {
                        "value": 60
                    },
                    "mean": {
                        "value": 45
                    },
                    "stdev": {
                        "value": 1
                    },
                    "variance": {
                        "value": 0.01
                    },
                    "error_rate": {
                        "value": 0.0001
                    },
                    "error_length": {
                        "value": 2.07
                    }
                },
                "pressure": {
                    "key": {
                        "value": "pressure"
                    },
                    "type": {
                        "value": "FLOAT"
                    },
                    "min": {
                        "value": 0
                    },
                    "max": {
                        "value": 50
                    },
                    "mean": {
                        "value": 37
                    },
                    "stdev": {
                        "value": 1
                    },
                    "variance": {
                        "value": 0.01
                    },
                    "error_rate": {
                        "value": 0.0001
                    },
                    "error_length": {
                        "value": 5
                    }
                },
                "broken": {
                    "key": {
                        "value": "broken"
                    },
                    "type": {
                        "value": "BOOL"
                    },
                    "true_ratio": {
                        "value": 0.01
                    }
                }
            }
        }
    }

---
apiVersion: v1
kind: Secret
metadata:
  name: image-pull-cr8
  namespace: "{{ kubernetes.namespace }}"
  labels:
    app.kubernetes.io/name: image-pull-cr8
    app.kubernetes.io/part-of: cratedb
    app.kubernetes.io/managed-by: replicator
  annotations:
    replicator.v1.mittwald.de/replicate-from: "templates/image-pull-cr8"
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: "e30K"  # empty {}

---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    k8s-app: datagenerator
    app.kubernetes.io/name: "{{ kubernetes.name }}"
  name: "dg-{{ ID_START }}"
  namespace: "{{ kubernetes.namespace }}"
spec:
  backoffLimit: 0
  template:
    metadata:
      annotations:
        prometheus.io/port: "8000"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
      labels:
        k8s-app: datagenerator
        app.kubernetes.io/name: "{{ kubernetes.name }}"
    spec:
      imagePullSecrets:
        - name: image-pull-cr8
      containers:
        - name: datagenerator
          image: "registry.cr8.net/data-generator:{{ version }}"
          ports:
            - containerPort: 8000
              protocol: TCP
          resources:
            requests:
              cpu: "500m"
              memory: "8196Mi"
            limits:
              cpu: "4000m"
              memory: "8196Mi"
          volumeMounts:
            - name: datamodel
              mountPath: "/grafana_demo_model.json"
              subPath: grafana_demo_model.json
          env:
            - name: ID_START
              value: "{{ ID_START }}"
            - name: ID_END
              value: "{{ ID_END }}"
            - name: HOST
              value: "{{ db.crateuri }}"
            - name: INGEST_MODE
              value: "0"
            - name: INGEST_SIZE
              value: "241920"
            - name: MODEL_PATH
              value: "/grafana_demo_model.json"
            - name: INGEST_DELTA
              value: "5"
            - name: TABLE_NAME
              value: "doc.grafana_demo_values"
            - name: SHARDS
              value: "4"
            - name: USERNAME
              value: "{{ credentials.username }}"
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ credentials.password_k8s_secret }}"
                  key: password
      restartPolicy: Never
      volumes:
        - name: datamodel
          configMap:
            name: datamodel
            items:
            - key: grafana_demo_model.json
              path: grafana_demo_model.json
